// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v5.26.1
// source: inventory_history.proto

package alpha_pos_system_sales_service

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// PosInventoryHistoryServiceClient is the client API for PosInventoryHistoryService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type PosInventoryHistoryServiceClient interface {
	CreatePosInventoryHistory(ctx context.Context, in *CreatePosInventoryHistoryRequest, opts ...grpc.CallOption) (*CreatePosInventoryHistoryResponse, error)
	ReadPosInventoryHistory(ctx context.Context, in *ReadPosInventoryHistoryRequest, opts ...grpc.CallOption) (*ReadPosInventoryHistoryResponse, error)
	UpdatePosInventoryHistory(ctx context.Context, in *UpdatePosInventoryHistoryRequest, opts ...grpc.CallOption) (*UpdatePosInventoryHistoryResponse, error)
	DeletePosInventoryHistory(ctx context.Context, in *DeletePosInventoryHistoryRequest, opts ...grpc.CallOption) (*DeletePosInventoryHistoryResponse, error)
	ReadAllPosInventoryHistories(ctx context.Context, in *ReadAllPosInventoryHistoriesRequest, opts ...grpc.CallOption) (*ReadAllPosInventoryHistoriesResponse, error)
}

type posInventoryHistoryServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewPosInventoryHistoryServiceClient(cc grpc.ClientConnInterface) PosInventoryHistoryServiceClient {
	return &posInventoryHistoryServiceClient{cc}
}

func (c *posInventoryHistoryServiceClient) CreatePosInventoryHistory(ctx context.Context, in *CreatePosInventoryHistoryRequest, opts ...grpc.CallOption) (*CreatePosInventoryHistoryResponse, error) {
	out := new(CreatePosInventoryHistoryResponse)
	err := c.cc.Invoke(ctx, "/pos.PosInventoryHistoryService/CreatePosInventoryHistory", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *posInventoryHistoryServiceClient) ReadPosInventoryHistory(ctx context.Context, in *ReadPosInventoryHistoryRequest, opts ...grpc.CallOption) (*ReadPosInventoryHistoryResponse, error) {
	out := new(ReadPosInventoryHistoryResponse)
	err := c.cc.Invoke(ctx, "/pos.PosInventoryHistoryService/ReadPosInventoryHistory", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *posInventoryHistoryServiceClient) UpdatePosInventoryHistory(ctx context.Context, in *UpdatePosInventoryHistoryRequest, opts ...grpc.CallOption) (*UpdatePosInventoryHistoryResponse, error) {
	out := new(UpdatePosInventoryHistoryResponse)
	err := c.cc.Invoke(ctx, "/pos.PosInventoryHistoryService/UpdatePosInventoryHistory", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *posInventoryHistoryServiceClient) DeletePosInventoryHistory(ctx context.Context, in *DeletePosInventoryHistoryRequest, opts ...grpc.CallOption) (*DeletePosInventoryHistoryResponse, error) {
	out := new(DeletePosInventoryHistoryResponse)
	err := c.cc.Invoke(ctx, "/pos.PosInventoryHistoryService/DeletePosInventoryHistory", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *posInventoryHistoryServiceClient) ReadAllPosInventoryHistories(ctx context.Context, in *ReadAllPosInventoryHistoriesRequest, opts ...grpc.CallOption) (*ReadAllPosInventoryHistoriesResponse, error) {
	out := new(ReadAllPosInventoryHistoriesResponse)
	err := c.cc.Invoke(ctx, "/pos.PosInventoryHistoryService/ReadAllPosInventoryHistories", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PosInventoryHistoryServiceServer is the server API for PosInventoryHistoryService service.
// All implementations must embed UnimplementedPosInventoryHistoryServiceServer
// for forward compatibility
type PosInventoryHistoryServiceServer interface {
	CreatePosInventoryHistory(context.Context, *CreatePosInventoryHistoryRequest) (*CreatePosInventoryHistoryResponse, error)
	ReadPosInventoryHistory(context.Context, *ReadPosInventoryHistoryRequest) (*ReadPosInventoryHistoryResponse, error)
	UpdatePosInventoryHistory(context.Context, *UpdatePosInventoryHistoryRequest) (*UpdatePosInventoryHistoryResponse, error)
	DeletePosInventoryHistory(context.Context, *DeletePosInventoryHistoryRequest) (*DeletePosInventoryHistoryResponse, error)
	ReadAllPosInventoryHistories(context.Context, *ReadAllPosInventoryHistoriesRequest) (*ReadAllPosInventoryHistoriesResponse, error)
	mustEmbedUnimplementedPosInventoryHistoryServiceServer()
}

// UnimplementedPosInventoryHistoryServiceServer must be embedded to have forward compatible implementations.
type UnimplementedPosInventoryHistoryServiceServer struct {
}

func (UnimplementedPosInventoryHistoryServiceServer) CreatePosInventoryHistory(context.Context, *CreatePosInventoryHistoryRequest) (*CreatePosInventoryHistoryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreatePosInventoryHistory not implemented")
}
func (UnimplementedPosInventoryHistoryServiceServer) ReadPosInventoryHistory(context.Context, *ReadPosInventoryHistoryRequest) (*ReadPosInventoryHistoryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReadPosInventoryHistory not implemented")
}
func (UnimplementedPosInventoryHistoryServiceServer) UpdatePosInventoryHistory(context.Context, *UpdatePosInventoryHistoryRequest) (*UpdatePosInventoryHistoryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdatePosInventoryHistory not implemented")
}
func (UnimplementedPosInventoryHistoryServiceServer) DeletePosInventoryHistory(context.Context, *DeletePosInventoryHistoryRequest) (*DeletePosInventoryHistoryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeletePosInventoryHistory not implemented")
}
func (UnimplementedPosInventoryHistoryServiceServer) ReadAllPosInventoryHistories(context.Context, *ReadAllPosInventoryHistoriesRequest) (*ReadAllPosInventoryHistoriesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReadAllPosInventoryHistories not implemented")
}
func (UnimplementedPosInventoryHistoryServiceServer) mustEmbedUnimplementedPosInventoryHistoryServiceServer() {
}

// UnsafePosInventoryHistoryServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to PosInventoryHistoryServiceServer will
// result in compilation errors.
type UnsafePosInventoryHistoryServiceServer interface {
	mustEmbedUnimplementedPosInventoryHistoryServiceServer()
}

func RegisterPosInventoryHistoryServiceServer(s grpc.ServiceRegistrar, srv PosInventoryHistoryServiceServer) {
	s.RegisterService(&PosInventoryHistoryService_ServiceDesc, srv)
}

func _PosInventoryHistoryService_CreatePosInventoryHistory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreatePosInventoryHistoryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PosInventoryHistoryServiceServer).CreatePosInventoryHistory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pos.PosInventoryHistoryService/CreatePosInventoryHistory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PosInventoryHistoryServiceServer).CreatePosInventoryHistory(ctx, req.(*CreatePosInventoryHistoryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PosInventoryHistoryService_ReadPosInventoryHistory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReadPosInventoryHistoryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PosInventoryHistoryServiceServer).ReadPosInventoryHistory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pos.PosInventoryHistoryService/ReadPosInventoryHistory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PosInventoryHistoryServiceServer).ReadPosInventoryHistory(ctx, req.(*ReadPosInventoryHistoryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PosInventoryHistoryService_UpdatePosInventoryHistory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdatePosInventoryHistoryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PosInventoryHistoryServiceServer).UpdatePosInventoryHistory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pos.PosInventoryHistoryService/UpdatePosInventoryHistory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PosInventoryHistoryServiceServer).UpdatePosInventoryHistory(ctx, req.(*UpdatePosInventoryHistoryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PosInventoryHistoryService_DeletePosInventoryHistory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeletePosInventoryHistoryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PosInventoryHistoryServiceServer).DeletePosInventoryHistory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pos.PosInventoryHistoryService/DeletePosInventoryHistory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PosInventoryHistoryServiceServer).DeletePosInventoryHistory(ctx, req.(*DeletePosInventoryHistoryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PosInventoryHistoryService_ReadAllPosInventoryHistories_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReadAllPosInventoryHistoriesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PosInventoryHistoryServiceServer).ReadAllPosInventoryHistories(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pos.PosInventoryHistoryService/ReadAllPosInventoryHistories",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PosInventoryHistoryServiceServer).ReadAllPosInventoryHistories(ctx, req.(*ReadAllPosInventoryHistoriesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// PosInventoryHistoryService_ServiceDesc is the grpc.ServiceDesc for PosInventoryHistoryService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var PosInventoryHistoryService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "pos.PosInventoryHistoryService",
	HandlerType: (*PosInventoryHistoryServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreatePosInventoryHistory",
			Handler:    _PosInventoryHistoryService_CreatePosInventoryHistory_Handler,
		},
		{
			MethodName: "ReadPosInventoryHistory",
			Handler:    _PosInventoryHistoryService_ReadPosInventoryHistory_Handler,
		},
		{
			MethodName: "UpdatePosInventoryHistory",
			Handler:    _PosInventoryHistoryService_UpdatePosInventoryHistory_Handler,
		},
		{
			MethodName: "DeletePosInventoryHistory",
			Handler:    _PosInventoryHistoryService_DeletePosInventoryHistory_Handler,
		},
		{
			MethodName: "ReadAllPosInventoryHistories",
			Handler:    _PosInventoryHistoryService_ReadAllPosInventoryHistories_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "inventory_history.proto",
}
