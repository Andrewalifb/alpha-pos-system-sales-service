syntax = "proto3";

package pos;

option go_package="github.com/Andrewalifb/alpha-pos-system-sales-service";

import "google/protobuf/timestamp.proto";
import "alpha-pos-system-sales-service/api/proto/common.proto"; 

// PosPaymentMethod
message PosPaymentMethod {
  string payment_method_id = 1;
  string method_name = 2;
  string company_id = 3;
  google.protobuf.Timestamp created_at = 4;
  string created_by = 5;
  google.protobuf.Timestamp updated_at = 6;
  string updated_by = 7;
}

// Request and Response messages
message CreatePosPaymentMethodRequest {
  PosPaymentMethod pos_payment_method = 1;
  JWTPayload jwt_payload = 2;
  string jwt_token = 3;
}

message CreatePosPaymentMethodResponse {
  PosPaymentMethod pos_payment_method = 1;
}

message ReadPosPaymentMethodRequest {
  string payment_method_id = 1;
  JWTPayload jwt_payload = 2;
  string jwt_token = 3;
}

message ReadPosPaymentMethodResponse {
  PosPaymentMethod pos_payment_method = 1;
}

message UpdatePosPaymentMethodRequest {
  PosPaymentMethod pos_payment_method = 1;
  JWTPayload jwt_payload = 2;
  string jwt_token = 3;
}

message UpdatePosPaymentMethodResponse {
  PosPaymentMethod pos_payment_method = 1;
}

message DeletePosPaymentMethodRequest {
  string payment_method_id = 1;
  JWTPayload jwt_payload = 2;
  string jwt_token = 3;
}

message DeletePosPaymentMethodResponse {
  bool success = 1;
}

message ReadAllPosPaymentMethodsRequest {
  int32 limit = 1;
  int32 page = 2;
  JWTPayload jwt_payload = 3;
  string jwt_token = 4;
}

message ReadAllPosPaymentMethodsResponse {
  repeated PosPaymentMethod pos_payment_methods = 1;
  int32 limit = 2;
  int32 page = 3;
  int32 max_page = 4;
  int64 count = 5;
}

// PosPaymentMethodService
service PosPaymentMethodService {
  rpc CreatePosPaymentMethod(CreatePosPaymentMethodRequest) returns (CreatePosPaymentMethodResponse);
  rpc ReadPosPaymentMethod(ReadPosPaymentMethodRequest) returns (ReadPosPaymentMethodResponse);
  rpc UpdatePosPaymentMethod(UpdatePosPaymentMethodRequest) returns (UpdatePosPaymentMethodResponse);
  rpc DeletePosPaymentMethod(DeletePosPaymentMethodRequest) returns (DeletePosPaymentMethodResponse);
  rpc ReadAllPosPaymentMethods(ReadAllPosPaymentMethodsRequest) returns (ReadAllPosPaymentMethodsResponse);
}
