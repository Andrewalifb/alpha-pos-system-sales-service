// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v5.26.1
// source: product.proto

package alpha_pos_system_sales_service

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// PosProductServiceClient is the client API for PosProductService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type PosProductServiceClient interface {
	CreatePosProduct(ctx context.Context, in *CreatePosProductRequest, opts ...grpc.CallOption) (*CreatePosProductResponse, error)
	ReadPosProduct(ctx context.Context, in *ReadPosProductRequest, opts ...grpc.CallOption) (*ReadPosProductResponse, error)
	UpdatePosProduct(ctx context.Context, in *UpdatePosProductRequest, opts ...grpc.CallOption) (*UpdatePosProductResponse, error)
	DeletePosProduct(ctx context.Context, in *DeletePosProductRequest, opts ...grpc.CallOption) (*DeletePosProductResponse, error)
	ReadAllPosProducts(ctx context.Context, in *ReadAllPosProductsRequest, opts ...grpc.CallOption) (*ReadAllPosProductsResponse, error)
	ReadPosProductByBarcode(ctx context.Context, in *ReadPosProductByBarcodeRequest, opts ...grpc.CallOption) (*ReadPosProductByBarcodeResponse, error)
}

type posProductServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewPosProductServiceClient(cc grpc.ClientConnInterface) PosProductServiceClient {
	return &posProductServiceClient{cc}
}

func (c *posProductServiceClient) CreatePosProduct(ctx context.Context, in *CreatePosProductRequest, opts ...grpc.CallOption) (*CreatePosProductResponse, error) {
	out := new(CreatePosProductResponse)
	err := c.cc.Invoke(ctx, "/pos.PosProductService/CreatePosProduct", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *posProductServiceClient) ReadPosProduct(ctx context.Context, in *ReadPosProductRequest, opts ...grpc.CallOption) (*ReadPosProductResponse, error) {
	out := new(ReadPosProductResponse)
	err := c.cc.Invoke(ctx, "/pos.PosProductService/ReadPosProduct", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *posProductServiceClient) UpdatePosProduct(ctx context.Context, in *UpdatePosProductRequest, opts ...grpc.CallOption) (*UpdatePosProductResponse, error) {
	out := new(UpdatePosProductResponse)
	err := c.cc.Invoke(ctx, "/pos.PosProductService/UpdatePosProduct", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *posProductServiceClient) DeletePosProduct(ctx context.Context, in *DeletePosProductRequest, opts ...grpc.CallOption) (*DeletePosProductResponse, error) {
	out := new(DeletePosProductResponse)
	err := c.cc.Invoke(ctx, "/pos.PosProductService/DeletePosProduct", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *posProductServiceClient) ReadAllPosProducts(ctx context.Context, in *ReadAllPosProductsRequest, opts ...grpc.CallOption) (*ReadAllPosProductsResponse, error) {
	out := new(ReadAllPosProductsResponse)
	err := c.cc.Invoke(ctx, "/pos.PosProductService/ReadAllPosProducts", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *posProductServiceClient) ReadPosProductByBarcode(ctx context.Context, in *ReadPosProductByBarcodeRequest, opts ...grpc.CallOption) (*ReadPosProductByBarcodeResponse, error) {
	out := new(ReadPosProductByBarcodeResponse)
	err := c.cc.Invoke(ctx, "/pos.PosProductService/ReadPosProductByBarcode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PosProductServiceServer is the server API for PosProductService service.
// All implementations must embed UnimplementedPosProductServiceServer
// for forward compatibility
type PosProductServiceServer interface {
	CreatePosProduct(context.Context, *CreatePosProductRequest) (*CreatePosProductResponse, error)
	ReadPosProduct(context.Context, *ReadPosProductRequest) (*ReadPosProductResponse, error)
	UpdatePosProduct(context.Context, *UpdatePosProductRequest) (*UpdatePosProductResponse, error)
	DeletePosProduct(context.Context, *DeletePosProductRequest) (*DeletePosProductResponse, error)
	ReadAllPosProducts(context.Context, *ReadAllPosProductsRequest) (*ReadAllPosProductsResponse, error)
	ReadPosProductByBarcode(context.Context, *ReadPosProductByBarcodeRequest) (*ReadPosProductByBarcodeResponse, error)
	mustEmbedUnimplementedPosProductServiceServer()
}

// UnimplementedPosProductServiceServer must be embedded to have forward compatible implementations.
type UnimplementedPosProductServiceServer struct {
}

func (UnimplementedPosProductServiceServer) CreatePosProduct(context.Context, *CreatePosProductRequest) (*CreatePosProductResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreatePosProduct not implemented")
}
func (UnimplementedPosProductServiceServer) ReadPosProduct(context.Context, *ReadPosProductRequest) (*ReadPosProductResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReadPosProduct not implemented")
}
func (UnimplementedPosProductServiceServer) UpdatePosProduct(context.Context, *UpdatePosProductRequest) (*UpdatePosProductResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdatePosProduct not implemented")
}
func (UnimplementedPosProductServiceServer) DeletePosProduct(context.Context, *DeletePosProductRequest) (*DeletePosProductResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeletePosProduct not implemented")
}
func (UnimplementedPosProductServiceServer) ReadAllPosProducts(context.Context, *ReadAllPosProductsRequest) (*ReadAllPosProductsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReadAllPosProducts not implemented")
}
func (UnimplementedPosProductServiceServer) ReadPosProductByBarcode(context.Context, *ReadPosProductByBarcodeRequest) (*ReadPosProductByBarcodeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReadPosProductByBarcode not implemented")
}
func (UnimplementedPosProductServiceServer) mustEmbedUnimplementedPosProductServiceServer() {}

// UnsafePosProductServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to PosProductServiceServer will
// result in compilation errors.
type UnsafePosProductServiceServer interface {
	mustEmbedUnimplementedPosProductServiceServer()
}

func RegisterPosProductServiceServer(s grpc.ServiceRegistrar, srv PosProductServiceServer) {
	s.RegisterService(&PosProductService_ServiceDesc, srv)
}

func _PosProductService_CreatePosProduct_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreatePosProductRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PosProductServiceServer).CreatePosProduct(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pos.PosProductService/CreatePosProduct",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PosProductServiceServer).CreatePosProduct(ctx, req.(*CreatePosProductRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PosProductService_ReadPosProduct_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReadPosProductRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PosProductServiceServer).ReadPosProduct(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pos.PosProductService/ReadPosProduct",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PosProductServiceServer).ReadPosProduct(ctx, req.(*ReadPosProductRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PosProductService_UpdatePosProduct_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdatePosProductRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PosProductServiceServer).UpdatePosProduct(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pos.PosProductService/UpdatePosProduct",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PosProductServiceServer).UpdatePosProduct(ctx, req.(*UpdatePosProductRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PosProductService_DeletePosProduct_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeletePosProductRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PosProductServiceServer).DeletePosProduct(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pos.PosProductService/DeletePosProduct",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PosProductServiceServer).DeletePosProduct(ctx, req.(*DeletePosProductRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PosProductService_ReadAllPosProducts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReadAllPosProductsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PosProductServiceServer).ReadAllPosProducts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pos.PosProductService/ReadAllPosProducts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PosProductServiceServer).ReadAllPosProducts(ctx, req.(*ReadAllPosProductsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PosProductService_ReadPosProductByBarcode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReadPosProductByBarcodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PosProductServiceServer).ReadPosProductByBarcode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pos.PosProductService/ReadPosProductByBarcode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PosProductServiceServer).ReadPosProductByBarcode(ctx, req.(*ReadPosProductByBarcodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// PosProductService_ServiceDesc is the grpc.ServiceDesc for PosProductService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var PosProductService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "pos.PosProductService",
	HandlerType: (*PosProductServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreatePosProduct",
			Handler:    _PosProductService_CreatePosProduct_Handler,
		},
		{
			MethodName: "ReadPosProduct",
			Handler:    _PosProductService_ReadPosProduct_Handler,
		},
		{
			MethodName: "UpdatePosProduct",
			Handler:    _PosProductService_UpdatePosProduct_Handler,
		},
		{
			MethodName: "DeletePosProduct",
			Handler:    _PosProductService_DeletePosProduct_Handler,
		},
		{
			MethodName: "ReadAllPosProducts",
			Handler:    _PosProductService_ReadAllPosProducts_Handler,
		},
		{
			MethodName: "ReadPosProductByBarcode",
			Handler:    _PosProductService_ReadPosProductByBarcode_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "product.proto",
}
