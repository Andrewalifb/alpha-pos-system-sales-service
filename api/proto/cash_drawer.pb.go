// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v5.26.1
// source: cash_drawer.proto

package alpha_pos_system_sales_service

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// PosCashDrawer
type PosCashDrawer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DrawerId        string                 `protobuf:"bytes,1,opt,name=drawer_id,json=drawerId,proto3" json:"drawer_id,omitempty"`
	StoreId         string                 `protobuf:"bytes,2,opt,name=store_id,json=storeId,proto3" json:"store_id,omitempty"`
	EmployeeId      string                 `protobuf:"bytes,3,opt,name=employee_id,json=employeeId,proto3" json:"employee_id,omitempty"`
	ReceiptId       string                 `protobuf:"bytes,4,opt,name=receipt_id,json=receiptId,proto3" json:"receipt_id,omitempty"`
	CashIn          float64                `protobuf:"fixed64,5,opt,name=cash_in,json=cashIn,proto3" json:"cash_in,omitempty"`
	Amount          float64                `protobuf:"fixed64,6,opt,name=amount,proto3" json:"amount,omitempty"`
	CashOut         float64                `protobuf:"fixed64,7,opt,name=cash_out,json=cashOut,proto3" json:"cash_out,omitempty"`
	TransactionTime *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=transaction_time,json=transactionTime,proto3" json:"transaction_time,omitempty"`
	RoleId          string                 `protobuf:"bytes,9,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`
	BranchId        string                 `protobuf:"bytes,10,opt,name=branch_id,json=branchId,proto3" json:"branch_id,omitempty"`
	CompanyId       string                 `protobuf:"bytes,11,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
	Description     string                 `protobuf:"bytes,12,opt,name=description,proto3" json:"description,omitempty"`
	CreatedAt       *timestamppb.Timestamp `protobuf:"bytes,13,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	CreatedBy       string                 `protobuf:"bytes,14,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	UpdatedAt       *timestamppb.Timestamp `protobuf:"bytes,15,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	UpdatedBy       string                 `protobuf:"bytes,16,opt,name=updated_by,json=updatedBy,proto3" json:"updated_by,omitempty"`
}

func (x *PosCashDrawer) Reset() {
	*x = PosCashDrawer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cash_drawer_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PosCashDrawer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PosCashDrawer) ProtoMessage() {}

func (x *PosCashDrawer) ProtoReflect() protoreflect.Message {
	mi := &file_cash_drawer_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PosCashDrawer.ProtoReflect.Descriptor instead.
func (*PosCashDrawer) Descriptor() ([]byte, []int) {
	return file_cash_drawer_proto_rawDescGZIP(), []int{0}
}

func (x *PosCashDrawer) GetDrawerId() string {
	if x != nil {
		return x.DrawerId
	}
	return ""
}

func (x *PosCashDrawer) GetStoreId() string {
	if x != nil {
		return x.StoreId
	}
	return ""
}

func (x *PosCashDrawer) GetEmployeeId() string {
	if x != nil {
		return x.EmployeeId
	}
	return ""
}

func (x *PosCashDrawer) GetReceiptId() string {
	if x != nil {
		return x.ReceiptId
	}
	return ""
}

func (x *PosCashDrawer) GetCashIn() float64 {
	if x != nil {
		return x.CashIn
	}
	return 0
}

func (x *PosCashDrawer) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *PosCashDrawer) GetCashOut() float64 {
	if x != nil {
		return x.CashOut
	}
	return 0
}

func (x *PosCashDrawer) GetTransactionTime() *timestamppb.Timestamp {
	if x != nil {
		return x.TransactionTime
	}
	return nil
}

func (x *PosCashDrawer) GetRoleId() string {
	if x != nil {
		return x.RoleId
	}
	return ""
}

func (x *PosCashDrawer) GetBranchId() string {
	if x != nil {
		return x.BranchId
	}
	return ""
}

func (x *PosCashDrawer) GetCompanyId() string {
	if x != nil {
		return x.CompanyId
	}
	return ""
}

func (x *PosCashDrawer) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *PosCashDrawer) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *PosCashDrawer) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *PosCashDrawer) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *PosCashDrawer) GetUpdatedBy() string {
	if x != nil {
		return x.UpdatedBy
	}
	return ""
}

// Request and Response messages
type CreatePosCashDrawerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PosCashDrawer *PosCashDrawer `protobuf:"bytes,1,opt,name=pos_cash_drawer,json=posCashDrawer,proto3" json:"pos_cash_drawer,omitempty"`
	JwtPayload    *JWTPayload    `protobuf:"bytes,2,opt,name=jwt_payload,json=jwtPayload,proto3" json:"jwt_payload,omitempty"`
	JwtToken      string         `protobuf:"bytes,3,opt,name=jwt_token,json=jwtToken,proto3" json:"jwt_token,omitempty"`
}

func (x *CreatePosCashDrawerRequest) Reset() {
	*x = CreatePosCashDrawerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cash_drawer_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePosCashDrawerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePosCashDrawerRequest) ProtoMessage() {}

func (x *CreatePosCashDrawerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cash_drawer_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePosCashDrawerRequest.ProtoReflect.Descriptor instead.
func (*CreatePosCashDrawerRequest) Descriptor() ([]byte, []int) {
	return file_cash_drawer_proto_rawDescGZIP(), []int{1}
}

func (x *CreatePosCashDrawerRequest) GetPosCashDrawer() *PosCashDrawer {
	if x != nil {
		return x.PosCashDrawer
	}
	return nil
}

func (x *CreatePosCashDrawerRequest) GetJwtPayload() *JWTPayload {
	if x != nil {
		return x.JwtPayload
	}
	return nil
}

func (x *CreatePosCashDrawerRequest) GetJwtToken() string {
	if x != nil {
		return x.JwtToken
	}
	return ""
}

type CreatePosCashDrawerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PosCashDrawer *PosCashDrawer `protobuf:"bytes,1,opt,name=pos_cash_drawer,json=posCashDrawer,proto3" json:"pos_cash_drawer,omitempty"`
}

func (x *CreatePosCashDrawerResponse) Reset() {
	*x = CreatePosCashDrawerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cash_drawer_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePosCashDrawerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePosCashDrawerResponse) ProtoMessage() {}

func (x *CreatePosCashDrawerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cash_drawer_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePosCashDrawerResponse.ProtoReflect.Descriptor instead.
func (*CreatePosCashDrawerResponse) Descriptor() ([]byte, []int) {
	return file_cash_drawer_proto_rawDescGZIP(), []int{2}
}

func (x *CreatePosCashDrawerResponse) GetPosCashDrawer() *PosCashDrawer {
	if x != nil {
		return x.PosCashDrawer
	}
	return nil
}

type ReadPosCashDrawerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DrawerId   string      `protobuf:"bytes,1,opt,name=drawer_id,json=drawerId,proto3" json:"drawer_id,omitempty"`
	JwtPayload *JWTPayload `protobuf:"bytes,2,opt,name=jwt_payload,json=jwtPayload,proto3" json:"jwt_payload,omitempty"`
	JwtToken   string      `protobuf:"bytes,3,opt,name=jwt_token,json=jwtToken,proto3" json:"jwt_token,omitempty"`
}

func (x *ReadPosCashDrawerRequest) Reset() {
	*x = ReadPosCashDrawerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cash_drawer_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadPosCashDrawerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadPosCashDrawerRequest) ProtoMessage() {}

func (x *ReadPosCashDrawerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cash_drawer_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadPosCashDrawerRequest.ProtoReflect.Descriptor instead.
func (*ReadPosCashDrawerRequest) Descriptor() ([]byte, []int) {
	return file_cash_drawer_proto_rawDescGZIP(), []int{3}
}

func (x *ReadPosCashDrawerRequest) GetDrawerId() string {
	if x != nil {
		return x.DrawerId
	}
	return ""
}

func (x *ReadPosCashDrawerRequest) GetJwtPayload() *JWTPayload {
	if x != nil {
		return x.JwtPayload
	}
	return nil
}

func (x *ReadPosCashDrawerRequest) GetJwtToken() string {
	if x != nil {
		return x.JwtToken
	}
	return ""
}

type ReadPosCashDrawerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PosCashDrawer *PosCashDrawer `protobuf:"bytes,1,opt,name=pos_cash_drawer,json=posCashDrawer,proto3" json:"pos_cash_drawer,omitempty"`
}

func (x *ReadPosCashDrawerResponse) Reset() {
	*x = ReadPosCashDrawerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cash_drawer_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadPosCashDrawerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadPosCashDrawerResponse) ProtoMessage() {}

func (x *ReadPosCashDrawerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cash_drawer_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadPosCashDrawerResponse.ProtoReflect.Descriptor instead.
func (*ReadPosCashDrawerResponse) Descriptor() ([]byte, []int) {
	return file_cash_drawer_proto_rawDescGZIP(), []int{4}
}

func (x *ReadPosCashDrawerResponse) GetPosCashDrawer() *PosCashDrawer {
	if x != nil {
		return x.PosCashDrawer
	}
	return nil
}

type UpdatePosCashDrawerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PosCashDrawer *PosCashDrawer `protobuf:"bytes,1,opt,name=pos_cash_drawer,json=posCashDrawer,proto3" json:"pos_cash_drawer,omitempty"`
	JwtPayload    *JWTPayload    `protobuf:"bytes,2,opt,name=jwt_payload,json=jwtPayload,proto3" json:"jwt_payload,omitempty"`
	JwtToken      string         `protobuf:"bytes,3,opt,name=jwt_token,json=jwtToken,proto3" json:"jwt_token,omitempty"`
}

func (x *UpdatePosCashDrawerRequest) Reset() {
	*x = UpdatePosCashDrawerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cash_drawer_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePosCashDrawerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePosCashDrawerRequest) ProtoMessage() {}

func (x *UpdatePosCashDrawerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cash_drawer_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePosCashDrawerRequest.ProtoReflect.Descriptor instead.
func (*UpdatePosCashDrawerRequest) Descriptor() ([]byte, []int) {
	return file_cash_drawer_proto_rawDescGZIP(), []int{5}
}

func (x *UpdatePosCashDrawerRequest) GetPosCashDrawer() *PosCashDrawer {
	if x != nil {
		return x.PosCashDrawer
	}
	return nil
}

func (x *UpdatePosCashDrawerRequest) GetJwtPayload() *JWTPayload {
	if x != nil {
		return x.JwtPayload
	}
	return nil
}

func (x *UpdatePosCashDrawerRequest) GetJwtToken() string {
	if x != nil {
		return x.JwtToken
	}
	return ""
}

type UpdatePosCashDrawerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PosCashDrawer *PosCashDrawer `protobuf:"bytes,1,opt,name=pos_cash_drawer,json=posCashDrawer,proto3" json:"pos_cash_drawer,omitempty"`
}

func (x *UpdatePosCashDrawerResponse) Reset() {
	*x = UpdatePosCashDrawerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cash_drawer_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePosCashDrawerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePosCashDrawerResponse) ProtoMessage() {}

func (x *UpdatePosCashDrawerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cash_drawer_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePosCashDrawerResponse.ProtoReflect.Descriptor instead.
func (*UpdatePosCashDrawerResponse) Descriptor() ([]byte, []int) {
	return file_cash_drawer_proto_rawDescGZIP(), []int{6}
}

func (x *UpdatePosCashDrawerResponse) GetPosCashDrawer() *PosCashDrawer {
	if x != nil {
		return x.PosCashDrawer
	}
	return nil
}

type DeletePosCashDrawerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DrawerId   string      `protobuf:"bytes,1,opt,name=drawer_id,json=drawerId,proto3" json:"drawer_id,omitempty"`
	JwtPayload *JWTPayload `protobuf:"bytes,2,opt,name=jwt_payload,json=jwtPayload,proto3" json:"jwt_payload,omitempty"`
	JwtToken   string      `protobuf:"bytes,3,opt,name=jwt_token,json=jwtToken,proto3" json:"jwt_token,omitempty"`
}

func (x *DeletePosCashDrawerRequest) Reset() {
	*x = DeletePosCashDrawerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cash_drawer_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletePosCashDrawerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePosCashDrawerRequest) ProtoMessage() {}

func (x *DeletePosCashDrawerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cash_drawer_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePosCashDrawerRequest.ProtoReflect.Descriptor instead.
func (*DeletePosCashDrawerRequest) Descriptor() ([]byte, []int) {
	return file_cash_drawer_proto_rawDescGZIP(), []int{7}
}

func (x *DeletePosCashDrawerRequest) GetDrawerId() string {
	if x != nil {
		return x.DrawerId
	}
	return ""
}

func (x *DeletePosCashDrawerRequest) GetJwtPayload() *JWTPayload {
	if x != nil {
		return x.JwtPayload
	}
	return nil
}

func (x *DeletePosCashDrawerRequest) GetJwtToken() string {
	if x != nil {
		return x.JwtToken
	}
	return ""
}

type DeletePosCashDrawerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *DeletePosCashDrawerResponse) Reset() {
	*x = DeletePosCashDrawerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cash_drawer_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletePosCashDrawerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePosCashDrawerResponse) ProtoMessage() {}

func (x *DeletePosCashDrawerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cash_drawer_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePosCashDrawerResponse.ProtoReflect.Descriptor instead.
func (*DeletePosCashDrawerResponse) Descriptor() ([]byte, []int) {
	return file_cash_drawer_proto_rawDescGZIP(), []int{8}
}

func (x *DeletePosCashDrawerResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type ReadAllPosCashDrawersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit      int32       `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Page       int32       `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	JwtPayload *JWTPayload `protobuf:"bytes,3,opt,name=jwt_payload,json=jwtPayload,proto3" json:"jwt_payload,omitempty"`
	JwtToken   string      `protobuf:"bytes,4,opt,name=jwt_token,json=jwtToken,proto3" json:"jwt_token,omitempty"`
}

func (x *ReadAllPosCashDrawersRequest) Reset() {
	*x = ReadAllPosCashDrawersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cash_drawer_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadAllPosCashDrawersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadAllPosCashDrawersRequest) ProtoMessage() {}

func (x *ReadAllPosCashDrawersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cash_drawer_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadAllPosCashDrawersRequest.ProtoReflect.Descriptor instead.
func (*ReadAllPosCashDrawersRequest) Descriptor() ([]byte, []int) {
	return file_cash_drawer_proto_rawDescGZIP(), []int{9}
}

func (x *ReadAllPosCashDrawersRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ReadAllPosCashDrawersRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ReadAllPosCashDrawersRequest) GetJwtPayload() *JWTPayload {
	if x != nil {
		return x.JwtPayload
	}
	return nil
}

func (x *ReadAllPosCashDrawersRequest) GetJwtToken() string {
	if x != nil {
		return x.JwtToken
	}
	return ""
}

type ReadAllPosCashDrawersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PosCashDrawers []*PosCashDrawer `protobuf:"bytes,1,rep,name=pos_cash_drawers,json=posCashDrawers,proto3" json:"pos_cash_drawers,omitempty"`
	Limit          int32            `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Page           int32            `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	MaxPage        int32            `protobuf:"varint,4,opt,name=max_page,json=maxPage,proto3" json:"max_page,omitempty"`
	Count          int64            `protobuf:"varint,5,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *ReadAllPosCashDrawersResponse) Reset() {
	*x = ReadAllPosCashDrawersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cash_drawer_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadAllPosCashDrawersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadAllPosCashDrawersResponse) ProtoMessage() {}

func (x *ReadAllPosCashDrawersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cash_drawer_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadAllPosCashDrawersResponse.ProtoReflect.Descriptor instead.
func (*ReadAllPosCashDrawersResponse) Descriptor() ([]byte, []int) {
	return file_cash_drawer_proto_rawDescGZIP(), []int{10}
}

func (x *ReadAllPosCashDrawersResponse) GetPosCashDrawers() []*PosCashDrawer {
	if x != nil {
		return x.PosCashDrawers
	}
	return nil
}

func (x *ReadAllPosCashDrawersResponse) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ReadAllPosCashDrawersResponse) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ReadAllPosCashDrawersResponse) GetMaxPage() int32 {
	if x != nil {
		return x.MaxPage
	}
	return 0
}

func (x *ReadAllPosCashDrawersResponse) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

var File_cash_drawer_proto protoreflect.FileDescriptor

var file_cash_drawer_proto_rawDesc = []byte{
	0x0a, 0x11, 0x63, 0x61, 0x73, 0x68, 0x5f, 0x64, 0x72, 0x61, 0x77, 0x65, 0x72, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x03, 0x70, 0x6f, 0x73, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc5, 0x04, 0x0a, 0x0d, 0x50, 0x6f, 0x73, 0x43,
	0x61, 0x73, 0x68, 0x44, 0x72, 0x61, 0x77, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x72, 0x61,
	0x77, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x72,
	0x61, 0x77, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x49,
	0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65,
	0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x49,
	0x64, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x61, 0x73, 0x68, 0x5f, 0x69, 0x6e, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x06, 0x63, 0x61, 0x73, 0x68, 0x49, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x61, 0x73, 0x68, 0x5f, 0x6f, 0x75, 0x74, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x63, 0x61, 0x73, 0x68, 0x4f, 0x75, 0x74, 0x12, 0x45, 0x0a,
	0x10, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x39, 0x0a, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x62, 0x79, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x10,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x22,
	0xa7, 0x01, 0x0a, 0x1a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x73, 0x43, 0x61, 0x73,
	0x68, 0x44, 0x72, 0x61, 0x77, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3a,
	0x0a, 0x0f, 0x70, 0x6f, 0x73, 0x5f, 0x63, 0x61, 0x73, 0x68, 0x5f, 0x64, 0x72, 0x61, 0x77, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x6f, 0x73, 0x2e, 0x50, 0x6f,
	0x73, 0x43, 0x61, 0x73, 0x68, 0x44, 0x72, 0x61, 0x77, 0x65, 0x72, 0x52, 0x0d, 0x70, 0x6f, 0x73,
	0x43, 0x61, 0x73, 0x68, 0x44, 0x72, 0x61, 0x77, 0x65, 0x72, 0x12, 0x30, 0x0a, 0x0b, 0x6a, 0x77,
	0x74, 0x5f, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x70, 0x6f, 0x73, 0x2e, 0x4a, 0x57, 0x54, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x52, 0x0a, 0x6a, 0x77, 0x74, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x1b, 0x0a, 0x09,
	0x6a, 0x77, 0x74, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x6a, 0x77, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x59, 0x0a, 0x1b, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x50, 0x6f, 0x73, 0x43, 0x61, 0x73, 0x68, 0x44, 0x72, 0x61, 0x77, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x0f, 0x70, 0x6f, 0x73, 0x5f,
	0x63, 0x61, 0x73, 0x68, 0x5f, 0x64, 0x72, 0x61, 0x77, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x70, 0x6f, 0x73, 0x2e, 0x50, 0x6f, 0x73, 0x43, 0x61, 0x73, 0x68, 0x44,
	0x72, 0x61, 0x77, 0x65, 0x72, 0x52, 0x0d, 0x70, 0x6f, 0x73, 0x43, 0x61, 0x73, 0x68, 0x44, 0x72,
	0x61, 0x77, 0x65, 0x72, 0x22, 0x86, 0x01, 0x0a, 0x18, 0x52, 0x65, 0x61, 0x64, 0x50, 0x6f, 0x73,
	0x43, 0x61, 0x73, 0x68, 0x44, 0x72, 0x61, 0x77, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x72, 0x61, 0x77, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x72, 0x61, 0x77, 0x65, 0x72, 0x49, 0x64, 0x12, 0x30,
	0x0a, 0x0b, 0x6a, 0x77, 0x74, 0x5f, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x6f, 0x73, 0x2e, 0x4a, 0x57, 0x54, 0x50, 0x61, 0x79,
	0x6c, 0x6f, 0x61, 0x64, 0x52, 0x0a, 0x6a, 0x77, 0x74, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x6a, 0x77, 0x74, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6a, 0x77, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x57, 0x0a,
	0x19, 0x52, 0x65, 0x61, 0x64, 0x50, 0x6f, 0x73, 0x43, 0x61, 0x73, 0x68, 0x44, 0x72, 0x61, 0x77,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x0f, 0x70, 0x6f,
	0x73, 0x5f, 0x63, 0x61, 0x73, 0x68, 0x5f, 0x64, 0x72, 0x61, 0x77, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x6f, 0x73, 0x2e, 0x50, 0x6f, 0x73, 0x43, 0x61, 0x73,
	0x68, 0x44, 0x72, 0x61, 0x77, 0x65, 0x72, 0x52, 0x0d, 0x70, 0x6f, 0x73, 0x43, 0x61, 0x73, 0x68,
	0x44, 0x72, 0x61, 0x77, 0x65, 0x72, 0x22, 0xa7, 0x01, 0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x50, 0x6f, 0x73, 0x43, 0x61, 0x73, 0x68, 0x44, 0x72, 0x61, 0x77, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3a, 0x0a, 0x0f, 0x70, 0x6f, 0x73, 0x5f, 0x63, 0x61, 0x73,
	0x68, 0x5f, 0x64, 0x72, 0x61, 0x77, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x70, 0x6f, 0x73, 0x2e, 0x50, 0x6f, 0x73, 0x43, 0x61, 0x73, 0x68, 0x44, 0x72, 0x61, 0x77,
	0x65, 0x72, 0x52, 0x0d, 0x70, 0x6f, 0x73, 0x43, 0x61, 0x73, 0x68, 0x44, 0x72, 0x61, 0x77, 0x65,
	0x72, 0x12, 0x30, 0x0a, 0x0b, 0x6a, 0x77, 0x74, 0x5f, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x6f, 0x73, 0x2e, 0x4a, 0x57, 0x54,
	0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x0a, 0x6a, 0x77, 0x74, 0x50, 0x61, 0x79, 0x6c,
	0x6f, 0x61, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6a, 0x77, 0x74, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6a, 0x77, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x22, 0x59, 0x0a, 0x1b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x73, 0x43, 0x61, 0x73,
	0x68, 0x44, 0x72, 0x61, 0x77, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x3a, 0x0a, 0x0f, 0x70, 0x6f, 0x73, 0x5f, 0x63, 0x61, 0x73, 0x68, 0x5f, 0x64, 0x72, 0x61, 0x77,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x6f, 0x73, 0x2e, 0x50,
	0x6f, 0x73, 0x43, 0x61, 0x73, 0x68, 0x44, 0x72, 0x61, 0x77, 0x65, 0x72, 0x52, 0x0d, 0x70, 0x6f,
	0x73, 0x43, 0x61, 0x73, 0x68, 0x44, 0x72, 0x61, 0x77, 0x65, 0x72, 0x22, 0x88, 0x01, 0x0a, 0x1a,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x6f, 0x73, 0x43, 0x61, 0x73, 0x68, 0x44, 0x72, 0x61,
	0x77, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x72,
	0x61, 0x77, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64,
	0x72, 0x61, 0x77, 0x65, 0x72, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x0b, 0x6a, 0x77, 0x74, 0x5f, 0x70,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70,
	0x6f, 0x73, 0x2e, 0x4a, 0x57, 0x54, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x0a, 0x6a,
	0x77, 0x74, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6a, 0x77, 0x74,
	0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6a, 0x77,
	0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x37, 0x0a, 0x1b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x50, 0x6f, 0x73, 0x43, 0x61, 0x73, 0x68, 0x44, 0x72, 0x61, 0x77, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22,
	0x97, 0x01, 0x0a, 0x1c, 0x52, 0x65, 0x61, 0x64, 0x41, 0x6c, 0x6c, 0x50, 0x6f, 0x73, 0x43, 0x61,
	0x73, 0x68, 0x44, 0x72, 0x61, 0x77, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x30, 0x0a, 0x0b, 0x6a, 0x77,
	0x74, 0x5f, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x70, 0x6f, 0x73, 0x2e, 0x4a, 0x57, 0x54, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x52, 0x0a, 0x6a, 0x77, 0x74, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x1b, 0x0a, 0x09,
	0x6a, 0x77, 0x74, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x6a, 0x77, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xb8, 0x01, 0x0a, 0x1d, 0x52, 0x65,
	0x61, 0x64, 0x41, 0x6c, 0x6c, 0x50, 0x6f, 0x73, 0x43, 0x61, 0x73, 0x68, 0x44, 0x72, 0x61, 0x77,
	0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x10, 0x70,
	0x6f, 0x73, 0x5f, 0x63, 0x61, 0x73, 0x68, 0x5f, 0x64, 0x72, 0x61, 0x77, 0x65, 0x72, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x6f, 0x73, 0x2e, 0x50, 0x6f, 0x73, 0x43,
	0x61, 0x73, 0x68, 0x44, 0x72, 0x61, 0x77, 0x65, 0x72, 0x52, 0x0e, 0x70, 0x6f, 0x73, 0x43, 0x61,
	0x73, 0x68, 0x44, 0x72, 0x61, 0x77, 0x65, 0x72, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x61, 0x78, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6d, 0x61, 0x78, 0x50, 0x61, 0x67, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x32, 0xd8, 0x03, 0x0a, 0x14, 0x50, 0x6f, 0x73, 0x43, 0x61, 0x73, 0x68,
	0x44, 0x72, 0x61, 0x77, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x58, 0x0a,
	0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x73, 0x43, 0x61, 0x73, 0x68, 0x44, 0x72,
	0x61, 0x77, 0x65, 0x72, 0x12, 0x1f, 0x2e, 0x70, 0x6f, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x50, 0x6f, 0x73, 0x43, 0x61, 0x73, 0x68, 0x44, 0x72, 0x61, 0x77, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x70, 0x6f, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x50, 0x6f, 0x73, 0x43, 0x61, 0x73, 0x68, 0x44, 0x72, 0x61, 0x77, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52, 0x0a, 0x11, 0x52, 0x65, 0x61, 0x64, 0x50,
	0x6f, 0x73, 0x43, 0x61, 0x73, 0x68, 0x44, 0x72, 0x61, 0x77, 0x65, 0x72, 0x12, 0x1d, 0x2e, 0x70,
	0x6f, 0x73, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x50, 0x6f, 0x73, 0x43, 0x61, 0x73, 0x68, 0x44, 0x72,
	0x61, 0x77, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x70, 0x6f,
	0x73, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x50, 0x6f, 0x73, 0x43, 0x61, 0x73, 0x68, 0x44, 0x72, 0x61,
	0x77, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x58, 0x0a, 0x13, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x73, 0x43, 0x61, 0x73, 0x68, 0x44, 0x72, 0x61, 0x77,
	0x65, 0x72, 0x12, 0x1f, 0x2e, 0x70, 0x6f, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50,
	0x6f, 0x73, 0x43, 0x61, 0x73, 0x68, 0x44, 0x72, 0x61, 0x77, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x70, 0x6f, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x50, 0x6f, 0x73, 0x43, 0x61, 0x73, 0x68, 0x44, 0x72, 0x61, 0x77, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x58, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50,
	0x6f, 0x73, 0x43, 0x61, 0x73, 0x68, 0x44, 0x72, 0x61, 0x77, 0x65, 0x72, 0x12, 0x1f, 0x2e, 0x70,
	0x6f, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x6f, 0x73, 0x43, 0x61, 0x73, 0x68,
	0x44, 0x72, 0x61, 0x77, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e,
	0x70, 0x6f, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x6f, 0x73, 0x43, 0x61, 0x73,
	0x68, 0x44, 0x72, 0x61, 0x77, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x5e, 0x0a, 0x15, 0x52, 0x65, 0x61, 0x64, 0x41, 0x6c, 0x6c, 0x50, 0x6f, 0x73, 0x43, 0x61, 0x73,
	0x68, 0x44, 0x72, 0x61, 0x77, 0x65, 0x72, 0x73, 0x12, 0x21, 0x2e, 0x70, 0x6f, 0x73, 0x2e, 0x52,
	0x65, 0x61, 0x64, 0x41, 0x6c, 0x6c, 0x50, 0x6f, 0x73, 0x43, 0x61, 0x73, 0x68, 0x44, 0x72, 0x61,
	0x77, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x70, 0x6f,
	0x73, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x41, 0x6c, 0x6c, 0x50, 0x6f, 0x73, 0x43, 0x61, 0x73, 0x68,
	0x44, 0x72, 0x61, 0x77, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42,
	0x37, 0x5a, 0x35, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x41, 0x6e,
	0x64, 0x72, 0x65, 0x77, 0x61, 0x6c, 0x69, 0x66, 0x62, 0x2f, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2d,
	0x70, 0x6f, 0x73, 0x2d, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2d, 0x73, 0x61, 0x6c, 0x65, 0x73,
	0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_cash_drawer_proto_rawDescOnce sync.Once
	file_cash_drawer_proto_rawDescData = file_cash_drawer_proto_rawDesc
)

func file_cash_drawer_proto_rawDescGZIP() []byte {
	file_cash_drawer_proto_rawDescOnce.Do(func() {
		file_cash_drawer_proto_rawDescData = protoimpl.X.CompressGZIP(file_cash_drawer_proto_rawDescData)
	})
	return file_cash_drawer_proto_rawDescData
}

var file_cash_drawer_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_cash_drawer_proto_goTypes = []interface{}{
	(*PosCashDrawer)(nil),                 // 0: pos.PosCashDrawer
	(*CreatePosCashDrawerRequest)(nil),    // 1: pos.CreatePosCashDrawerRequest
	(*CreatePosCashDrawerResponse)(nil),   // 2: pos.CreatePosCashDrawerResponse
	(*ReadPosCashDrawerRequest)(nil),      // 3: pos.ReadPosCashDrawerRequest
	(*ReadPosCashDrawerResponse)(nil),     // 4: pos.ReadPosCashDrawerResponse
	(*UpdatePosCashDrawerRequest)(nil),    // 5: pos.UpdatePosCashDrawerRequest
	(*UpdatePosCashDrawerResponse)(nil),   // 6: pos.UpdatePosCashDrawerResponse
	(*DeletePosCashDrawerRequest)(nil),    // 7: pos.DeletePosCashDrawerRequest
	(*DeletePosCashDrawerResponse)(nil),   // 8: pos.DeletePosCashDrawerResponse
	(*ReadAllPosCashDrawersRequest)(nil),  // 9: pos.ReadAllPosCashDrawersRequest
	(*ReadAllPosCashDrawersResponse)(nil), // 10: pos.ReadAllPosCashDrawersResponse
	(*timestamppb.Timestamp)(nil),         // 11: google.protobuf.Timestamp
	(*JWTPayload)(nil),                    // 12: pos.JWTPayload
}
var file_cash_drawer_proto_depIdxs = []int32{
	11, // 0: pos.PosCashDrawer.transaction_time:type_name -> google.protobuf.Timestamp
	11, // 1: pos.PosCashDrawer.created_at:type_name -> google.protobuf.Timestamp
	11, // 2: pos.PosCashDrawer.updated_at:type_name -> google.protobuf.Timestamp
	0,  // 3: pos.CreatePosCashDrawerRequest.pos_cash_drawer:type_name -> pos.PosCashDrawer
	12, // 4: pos.CreatePosCashDrawerRequest.jwt_payload:type_name -> pos.JWTPayload
	0,  // 5: pos.CreatePosCashDrawerResponse.pos_cash_drawer:type_name -> pos.PosCashDrawer
	12, // 6: pos.ReadPosCashDrawerRequest.jwt_payload:type_name -> pos.JWTPayload
	0,  // 7: pos.ReadPosCashDrawerResponse.pos_cash_drawer:type_name -> pos.PosCashDrawer
	0,  // 8: pos.UpdatePosCashDrawerRequest.pos_cash_drawer:type_name -> pos.PosCashDrawer
	12, // 9: pos.UpdatePosCashDrawerRequest.jwt_payload:type_name -> pos.JWTPayload
	0,  // 10: pos.UpdatePosCashDrawerResponse.pos_cash_drawer:type_name -> pos.PosCashDrawer
	12, // 11: pos.DeletePosCashDrawerRequest.jwt_payload:type_name -> pos.JWTPayload
	12, // 12: pos.ReadAllPosCashDrawersRequest.jwt_payload:type_name -> pos.JWTPayload
	0,  // 13: pos.ReadAllPosCashDrawersResponse.pos_cash_drawers:type_name -> pos.PosCashDrawer
	1,  // 14: pos.PosCashDrawerService.CreatePosCashDrawer:input_type -> pos.CreatePosCashDrawerRequest
	3,  // 15: pos.PosCashDrawerService.ReadPosCashDrawer:input_type -> pos.ReadPosCashDrawerRequest
	5,  // 16: pos.PosCashDrawerService.UpdatePosCashDrawer:input_type -> pos.UpdatePosCashDrawerRequest
	7,  // 17: pos.PosCashDrawerService.DeletePosCashDrawer:input_type -> pos.DeletePosCashDrawerRequest
	9,  // 18: pos.PosCashDrawerService.ReadAllPosCashDrawers:input_type -> pos.ReadAllPosCashDrawersRequest
	2,  // 19: pos.PosCashDrawerService.CreatePosCashDrawer:output_type -> pos.CreatePosCashDrawerResponse
	4,  // 20: pos.PosCashDrawerService.ReadPosCashDrawer:output_type -> pos.ReadPosCashDrawerResponse
	6,  // 21: pos.PosCashDrawerService.UpdatePosCashDrawer:output_type -> pos.UpdatePosCashDrawerResponse
	8,  // 22: pos.PosCashDrawerService.DeletePosCashDrawer:output_type -> pos.DeletePosCashDrawerResponse
	10, // 23: pos.PosCashDrawerService.ReadAllPosCashDrawers:output_type -> pos.ReadAllPosCashDrawersResponse
	19, // [19:24] is the sub-list for method output_type
	14, // [14:19] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_cash_drawer_proto_init() }
func file_cash_drawer_proto_init() {
	if File_cash_drawer_proto != nil {
		return
	}
	file_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_cash_drawer_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PosCashDrawer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cash_drawer_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePosCashDrawerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cash_drawer_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePosCashDrawerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cash_drawer_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadPosCashDrawerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cash_drawer_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadPosCashDrawerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cash_drawer_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePosCashDrawerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cash_drawer_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePosCashDrawerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cash_drawer_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeletePosCashDrawerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cash_drawer_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeletePosCashDrawerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cash_drawer_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadAllPosCashDrawersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cash_drawer_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadAllPosCashDrawersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cash_drawer_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_cash_drawer_proto_goTypes,
		DependencyIndexes: file_cash_drawer_proto_depIdxs,
		MessageInfos:      file_cash_drawer_proto_msgTypes,
	}.Build()
	File_cash_drawer_proto = out.File
	file_cash_drawer_proto_rawDesc = nil
	file_cash_drawer_proto_goTypes = nil
	file_cash_drawer_proto_depIdxs = nil
}
