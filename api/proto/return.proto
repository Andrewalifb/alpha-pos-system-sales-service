syntax = "proto3";

package pos;

option go_package = "github.com/Andrewalifb/alpha-pos-system-sales-service";

import "google/protobuf/timestamp.proto";
import "alpha-pos-system-sales-service/api/proto/common.proto";

// PosReturn
message PosReturn {
  string return_id = 1;
  string receipt_id = 2;
  string product_id = 3;
  int32 quantity = 4;
  double price = 5;
  double amount = 6;
  google.protobuf.Timestamp return_date = 7;
  string reason = 8;
  string store_id = 9;
  string branch_id = 10;
  string company_id = 11;
  google.protobuf.Timestamp created_at = 12;
  string created_by = 13;
  google.protobuf.Timestamp updated_at = 14;
  string updated_by = 15;
}

// Request and Response messages
message CreatePosReturnRequest {
  PosReturn pos_return = 1;
  JWTPayload jwt_payload = 2;
  string jwt_token = 3;
}

message CreatePosReturnResponse {
  PosReturn pos_return = 1;
}

message ReadPosReturnRequest {
  string return_id = 1;
  JWTPayload jwt_payload = 2;
  string jwt_token = 3;
}

message ReadPosReturnResponse {
  PosReturn pos_return = 1;
}

message UpdatePosReturnRequest {
  PosReturn pos_return = 1;
  JWTPayload jwt_payload = 2;
  string jwt_token = 3;
}

message UpdatePosReturnResponse {
  PosReturn pos_return = 1;
}

message DeletePosReturnRequest {
  string return_id = 1;
  JWTPayload jwt_payload = 2;
  string jwt_token = 3;
}

message DeletePosReturnResponse {
  bool success = 1;
}

message ReadAllPosReturnsRequest {
  int32 limit = 1;
  int32 page = 2;
  JWTPayload jwt_payload = 3;
  string jwt_token = 4;
}

message ReadAllPosReturnsResponse {
  repeated PosReturn pos_returns = 1;
  int32 limit = 2;
  int32 page = 3;
  int32 max_page = 4;
  int64 count = 5;
}

// PosReturnService
service PosReturnService {
  rpc CreatePosReturn(CreatePosReturnRequest) returns (CreatePosReturnResponse);
  rpc ReadPosReturn(ReadPosReturnRequest) returns (ReadPosReturnResponse);
  rpc UpdatePosReturn(UpdatePosReturnRequest) returns (UpdatePosReturnResponse);
  rpc DeletePosReturn(DeletePosReturnRequest) returns (DeletePosReturnResponse);
  rpc ReadAllPosReturns(ReadAllPosReturnsRequest) returns (ReadAllPosReturnsResponse);
}
