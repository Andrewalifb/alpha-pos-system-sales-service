// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v5.26.1
// source: promotion.proto

package alpha_pos_system_sales_service

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// PosPromotionServiceClient is the client API for PosPromotionService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type PosPromotionServiceClient interface {
	CreatePosPromotion(ctx context.Context, in *CreatePosPromotionRequest, opts ...grpc.CallOption) (*CreatePosPromotionResponse, error)
	ReadPosPromotion(ctx context.Context, in *ReadPosPromotionRequest, opts ...grpc.CallOption) (*ReadPosPromotionResponse, error)
	UpdatePosPromotion(ctx context.Context, in *UpdatePosPromotionRequest, opts ...grpc.CallOption) (*UpdatePosPromotionResponse, error)
	DeletePosPromotion(ctx context.Context, in *DeletePosPromotionRequest, opts ...grpc.CallOption) (*DeletePosPromotionResponse, error)
	ReadAllPosPromotions(ctx context.Context, in *ReadAllPosPromotionsRequest, opts ...grpc.CallOption) (*ReadAllPosPromotionsResponse, error)
	ReadPosPromotionByProductId(ctx context.Context, in *ReadPosPromotionByProductIdRequest, opts ...grpc.CallOption) (*ReadPosPromotionByProductIdResponse, error)
}

type posPromotionServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewPosPromotionServiceClient(cc grpc.ClientConnInterface) PosPromotionServiceClient {
	return &posPromotionServiceClient{cc}
}

func (c *posPromotionServiceClient) CreatePosPromotion(ctx context.Context, in *CreatePosPromotionRequest, opts ...grpc.CallOption) (*CreatePosPromotionResponse, error) {
	out := new(CreatePosPromotionResponse)
	err := c.cc.Invoke(ctx, "/pos.PosPromotionService/CreatePosPromotion", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *posPromotionServiceClient) ReadPosPromotion(ctx context.Context, in *ReadPosPromotionRequest, opts ...grpc.CallOption) (*ReadPosPromotionResponse, error) {
	out := new(ReadPosPromotionResponse)
	err := c.cc.Invoke(ctx, "/pos.PosPromotionService/ReadPosPromotion", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *posPromotionServiceClient) UpdatePosPromotion(ctx context.Context, in *UpdatePosPromotionRequest, opts ...grpc.CallOption) (*UpdatePosPromotionResponse, error) {
	out := new(UpdatePosPromotionResponse)
	err := c.cc.Invoke(ctx, "/pos.PosPromotionService/UpdatePosPromotion", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *posPromotionServiceClient) DeletePosPromotion(ctx context.Context, in *DeletePosPromotionRequest, opts ...grpc.CallOption) (*DeletePosPromotionResponse, error) {
	out := new(DeletePosPromotionResponse)
	err := c.cc.Invoke(ctx, "/pos.PosPromotionService/DeletePosPromotion", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *posPromotionServiceClient) ReadAllPosPromotions(ctx context.Context, in *ReadAllPosPromotionsRequest, opts ...grpc.CallOption) (*ReadAllPosPromotionsResponse, error) {
	out := new(ReadAllPosPromotionsResponse)
	err := c.cc.Invoke(ctx, "/pos.PosPromotionService/ReadAllPosPromotions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *posPromotionServiceClient) ReadPosPromotionByProductId(ctx context.Context, in *ReadPosPromotionByProductIdRequest, opts ...grpc.CallOption) (*ReadPosPromotionByProductIdResponse, error) {
	out := new(ReadPosPromotionByProductIdResponse)
	err := c.cc.Invoke(ctx, "/pos.PosPromotionService/ReadPosPromotionByProductId", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PosPromotionServiceServer is the server API for PosPromotionService service.
// All implementations must embed UnimplementedPosPromotionServiceServer
// for forward compatibility
type PosPromotionServiceServer interface {
	CreatePosPromotion(context.Context, *CreatePosPromotionRequest) (*CreatePosPromotionResponse, error)
	ReadPosPromotion(context.Context, *ReadPosPromotionRequest) (*ReadPosPromotionResponse, error)
	UpdatePosPromotion(context.Context, *UpdatePosPromotionRequest) (*UpdatePosPromotionResponse, error)
	DeletePosPromotion(context.Context, *DeletePosPromotionRequest) (*DeletePosPromotionResponse, error)
	ReadAllPosPromotions(context.Context, *ReadAllPosPromotionsRequest) (*ReadAllPosPromotionsResponse, error)
	ReadPosPromotionByProductId(context.Context, *ReadPosPromotionByProductIdRequest) (*ReadPosPromotionByProductIdResponse, error)
	mustEmbedUnimplementedPosPromotionServiceServer()
}

// UnimplementedPosPromotionServiceServer must be embedded to have forward compatible implementations.
type UnimplementedPosPromotionServiceServer struct {
}

func (UnimplementedPosPromotionServiceServer) CreatePosPromotion(context.Context, *CreatePosPromotionRequest) (*CreatePosPromotionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreatePosPromotion not implemented")
}
func (UnimplementedPosPromotionServiceServer) ReadPosPromotion(context.Context, *ReadPosPromotionRequest) (*ReadPosPromotionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReadPosPromotion not implemented")
}
func (UnimplementedPosPromotionServiceServer) UpdatePosPromotion(context.Context, *UpdatePosPromotionRequest) (*UpdatePosPromotionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdatePosPromotion not implemented")
}
func (UnimplementedPosPromotionServiceServer) DeletePosPromotion(context.Context, *DeletePosPromotionRequest) (*DeletePosPromotionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeletePosPromotion not implemented")
}
func (UnimplementedPosPromotionServiceServer) ReadAllPosPromotions(context.Context, *ReadAllPosPromotionsRequest) (*ReadAllPosPromotionsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReadAllPosPromotions not implemented")
}
func (UnimplementedPosPromotionServiceServer) ReadPosPromotionByProductId(context.Context, *ReadPosPromotionByProductIdRequest) (*ReadPosPromotionByProductIdResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReadPosPromotionByProductId not implemented")
}
func (UnimplementedPosPromotionServiceServer) mustEmbedUnimplementedPosPromotionServiceServer() {}

// UnsafePosPromotionServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to PosPromotionServiceServer will
// result in compilation errors.
type UnsafePosPromotionServiceServer interface {
	mustEmbedUnimplementedPosPromotionServiceServer()
}

func RegisterPosPromotionServiceServer(s grpc.ServiceRegistrar, srv PosPromotionServiceServer) {
	s.RegisterService(&PosPromotionService_ServiceDesc, srv)
}

func _PosPromotionService_CreatePosPromotion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreatePosPromotionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PosPromotionServiceServer).CreatePosPromotion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pos.PosPromotionService/CreatePosPromotion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PosPromotionServiceServer).CreatePosPromotion(ctx, req.(*CreatePosPromotionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PosPromotionService_ReadPosPromotion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReadPosPromotionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PosPromotionServiceServer).ReadPosPromotion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pos.PosPromotionService/ReadPosPromotion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PosPromotionServiceServer).ReadPosPromotion(ctx, req.(*ReadPosPromotionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PosPromotionService_UpdatePosPromotion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdatePosPromotionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PosPromotionServiceServer).UpdatePosPromotion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pos.PosPromotionService/UpdatePosPromotion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PosPromotionServiceServer).UpdatePosPromotion(ctx, req.(*UpdatePosPromotionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PosPromotionService_DeletePosPromotion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeletePosPromotionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PosPromotionServiceServer).DeletePosPromotion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pos.PosPromotionService/DeletePosPromotion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PosPromotionServiceServer).DeletePosPromotion(ctx, req.(*DeletePosPromotionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PosPromotionService_ReadAllPosPromotions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReadAllPosPromotionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PosPromotionServiceServer).ReadAllPosPromotions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pos.PosPromotionService/ReadAllPosPromotions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PosPromotionServiceServer).ReadAllPosPromotions(ctx, req.(*ReadAllPosPromotionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PosPromotionService_ReadPosPromotionByProductId_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReadPosPromotionByProductIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PosPromotionServiceServer).ReadPosPromotionByProductId(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pos.PosPromotionService/ReadPosPromotionByProductId",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PosPromotionServiceServer).ReadPosPromotionByProductId(ctx, req.(*ReadPosPromotionByProductIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// PosPromotionService_ServiceDesc is the grpc.ServiceDesc for PosPromotionService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var PosPromotionService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "pos.PosPromotionService",
	HandlerType: (*PosPromotionServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreatePosPromotion",
			Handler:    _PosPromotionService_CreatePosPromotion_Handler,
		},
		{
			MethodName: "ReadPosPromotion",
			Handler:    _PosPromotionService_ReadPosPromotion_Handler,
		},
		{
			MethodName: "UpdatePosPromotion",
			Handler:    _PosPromotionService_UpdatePosPromotion_Handler,
		},
		{
			MethodName: "DeletePosPromotion",
			Handler:    _PosPromotionService_DeletePosPromotion_Handler,
		},
		{
			MethodName: "ReadAllPosPromotions",
			Handler:    _PosPromotionService_ReadAllPosPromotions_Handler,
		},
		{
			MethodName: "ReadPosPromotionByProductId",
			Handler:    _PosPromotionService_ReadPosPromotionByProductId_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "promotion.proto",
}
